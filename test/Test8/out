[a:0x7fc544402e20, c:0x7fc544402dc0 ]
[a:0x7fc544402e20, c:0x7fc544402e00 ]
[a:0x7fc544402f60, c:0x7fc544402f20 ]
[a:0x7fc544402f60, c:0x7fc544402f40 ]
[a:0x7fc544402fe0, c:0x7fc544402e50  st ]
[a:0x7fc544402be0, c:0x7fc544402fe0  st ]
getid
getid
[a:0x7fc544402910, c:0x7fc544402be0 ]
%%%Frontend%%%



PROGRAMME // tableSymb size : 0
	FONCTION	VOID main // size : 2VAR INT32 z VAR INT64 t 
	BEGIN_BLOC // nb instr : 3 - tableSymb size : 2
		AFFECTATION ID z  = VAL 5  
		AFFECTATION ID t  = VAL 0  
		BLOC_WHILE ( DIFF ID z  != ID t  ) 
		BEGIN_BLOC // nb instr : 1 - tableSymb size : 0
			AFFECTATION ID t  = ADD ID t  + VAL 1  
		END_BLOC
	END_BLOC
END_PROGRAMME

%%%Backend%%%
getid
getid
getid
getid
NI IF NI ELSE
CREATION BLOC : main
BasicBlock::listeInstructionsAST->size() 3
getid
getid
IR::genererIR
CFG::genererIR
BB:genererIR()::listeInstructionsAST->size()3
------ FOR ----------  main
------ IF ----------
IR : Affectation
nomvariable z
reg offset -16
------ FIN IF ----------
------ FIN FOR ----------
------ FOR ----------  main
------ IF ----------
IR : Affectation
nomvariable t
reg offset -8
------ FIN IF ----------
------ FIN FOR ----------
------ FOR ----------  main
INSTRUCTION STRUCTURE DE CONTROLE
------ FIN FOR ----------

GEN_PROLOGUE
getid
getid
.text        
.globl main 
.type main, @function

main:

    pushq   %rbp 
    movq    %rsp, %rbp 
    subq    $32, %rsp 
    mov    %rdi, -16(%rbp) 
    mov    %rsi, -8(%rbp) 

    movq    $5, %rax
    movq    %rax, -16(%rbp)
    movq    $0, %rax
    movq    %rax, -8(%rbp)

    leave
    ret


Fin de l'analyse du programme
