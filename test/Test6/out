[a:0x7fa898c02da0, c:0x7fa898c02d40 ]
[a:0x7fa898c02da0, c:0x7fa898c02d80 ]
[a:0x7fa898c02e50, c:0x7fa898c02e10 ]
[a:0x7fa898c02e50, c:0x7fa898c02e30 ]
getid
[a:0x7fa898c030d0, c:0x7fa898c03090 ]
[a:0x7fa898c030d0, c:0x7fa898c030b0 ]
[a:0x7fa898c03160, c:0x7fa898c02ed0  st ]
[a:0x7fa898c02c00, c:0x7fa898c03160  st ]
getid
getid
[a:0x7fa898c02930, c:0x7fa898c02c00 ]
%%%Frontend%%%



PROGRAMME // tableSymb size : 0
	FONCTION	VOID main // size : 2VAR INT32 z VAR INT64 t 
	BEGIN_BLOC // nb instr : 1 - tableSymb size : 2
		BLOC_FOR ( AFFECTATION ID a  = VAL 0  , INF ID a  < ID z , AFFECTATION ID a  = ADD ID a  + VAL 1  )
		BEGIN_BLOC // nb instr : 1 - tableSymb size : 1
			AFFECTATION ID t  = ADD ID t  + VAL 1  
		END_BLOC
	END_BLOC
END_PROGRAMME

%%%Backend%%%
Taille liste fonction : 1
getid
test 2
------ FOR ----------
getid
getid
Taille liste CFG : 1

GEN_PROLOGUE
.text        
.global main 

main:

    pushq   %rbp 
    movq    %rsp, %rbp 
    subq    $16, %rsp 

    leave
    ret


Fin de l'analyse du programme
