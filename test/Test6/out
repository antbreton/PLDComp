[a:0x7fa03ec02d80, c:0x7fa03ec02d20 ]
[a:0x7fa03ec02d80, c:0x7fa03ec02d60 ]
[a:0x7fa03ec02e30, c:0x7fa03ec02df0 ]
[a:0x7fa03ec02e30, c:0x7fa03ec02e10 ]
getid
[a:0x7fa03ec030b0, c:0x7fa03ec03070 ]
[a:0x7fa03ec030b0, c:0x7fa03ec03090 ]
[a:0x7fa03ec03140, c:0x7fa03ec02eb0  st ]
[a:0x7fa03ec02be0, c:0x7fa03ec03140  st ]
getid
getid
[a:0x7fa03ec02910, c:0x7fa03ec02be0 ]
%%%Frontend%%%



PROGRAMME // tableSymb size : 0
	FONCTION	VOID main // size : 2VAR INT32 z VAR INT64 t 
	BEGIN_BLOC // nb instr : 1 - tableSymb size : 2
		BLOC_FOR ( AFFECTATION ID a  = VAL 0  , INF ID a  < ID z , AFFECTATION ID a  = ADD ID a  + VAL 1  )
		BEGIN_BLOC // nb instr : 1 - tableSymb size : 1
			AFFECTATION ID t  = ADD ID t  + VAL 1  
		END_BLOC
	END_BLOC
END_PROGRAMME

%%%Backend%%%
getid
getid
getid
getid
NI IF NI ELSE
CREATION BLOC : main
BasicBlock::listeInstructionsAST->size() 1
getid
getid
IR::genererIR
CFG::genererIR
BB:genererIR()::listeInstructionsAST->size()1
------ FOR ----------  main
INSTRUCTION STRUCTURE DE CONTROLE
------ FIN FOR ----------

GEN_PROLOGUE
getid
getid
.text        
.globl main 
.type main, @function

main:

    pushq   %rbp 
    movq    %rsp, %rbp 
    mov    %rdi, -16(%rbp) 
    mov    %rsi, -8(%rbp) 


    leave
    ret


Fin de l'analyse du programme
