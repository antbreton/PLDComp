[a:0x7f8598c02c30, c:0x7f8598c02bf0 ]
[a:0x7f8598c02c30, c:0x7f8598c02c10 ]
getid
[a:0x7f8598c02910, c:0x7f8598c02b40 ]
getid
getid
[a:0x7f8598c02910, c:0x7f8598c02ed0 ]
%%%Frontend%%%



PROGRAMME // tableSymb size : 0
	FONCTION	INT64 myFunc // size : 1VAR INT64 a 
	BEGIN_BLOC // nb instr : 1 - tableSymb size : 1		RETURN ADD ID a  + VAL 1 
	END_BLOC
	FONCTION	VOID main // size : 2VAR INT32 z VAR INT64 t 
	BEGIN_BLOC // nb instr : 2 - tableSymb size : 2
		AFFECTATION ID t  = APPEL FONCTION ID myFunc ID t  
		APPEL FONCTION ID myFunct ID t 
	END_BLOC
END_PROGRAMME

%%%Backend%%%
getid
getid
getid
NI IF NI ELSE
CREATION BLOC : myFunc
BasicBlock::listeInstructionsAST->size() 1
getid
getid
getid
getid
NI IF NI ELSE
CREATION BLOC : main
BasicBlock::listeInstructionsAST->size() 2
getid
getid
IR::genererIR
CFG::genererIR
BB:genererIR()::listeInstructionsAST->size()1
------ FOR ----------  myFunc
------ FIN FOR ----------
CFG::genererIR
BB:genererIR()::listeInstructionsAST->size()2
------ FOR ----------  main
------ IF ----------
IR : Affectation
nomvariable t
reg offset -8
IR AppelFonction
IR Identifiant
nomvariable t
reg offset -8
Fin IR : Identifiant
------ FIN IF ----------
------ FIN FOR ----------
------ FOR ----------  main
------ IF ----------
IR AppelFonction
IR Identifiant
nomvariable t
reg offset -8
Fin IR : Identifiant
------ FIN IF ----------
------ FIN FOR ----------

GEN_PROLOGUE
getid

GEN_PROLOGUE
getid
getid



.text        
.globl myFunc 
.type myFunc, @function

myFunc:

    pushq   %rbp 
    movq    %rsp, %rbp 
    mov    %rdi, -8(%rbp) 


    leave
    ret

main:

    pushq   %rbp 
    movq    %rsp, %rbp 
    subq    $56, %rsp 
    mov    %rdi, -16(%rbp) 
    mov    %rsi, -8(%rbp) 

    movq    -40(%rbp), %rax
    movq    -8(%rbp), %rdi
    movq    %rdi, %rax
    mov    -40(%rbp), %rdi 
    call   myFunc
    movq    -32(%rbp), %rax
    movq    %rax, -8(%rbp)
    movq    -56(%rbp), %rax
    movq    -8(%rbp), %rdi
    movq    %rdi, %rax
    mov    -56(%rbp), %rdi 
    call   myFunct

    leave
    ret


Fin de l'analyse du programme
